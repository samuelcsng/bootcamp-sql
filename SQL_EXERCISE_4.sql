-- DROP DATABASE IF EXISTS SQL_EXERCISE4;
SHOW DATABASES;
-- CREATE DATABASE IF NOT EXISTS SQL_EXERCISE4;
USE SQL_EXERCISE4;

-- DROP TABLE IF EXISTS PLAYERS;
-- DROP TABLE IF EXISTS MATCHES;
SHOW TABLES;
CREATE TABLE IF NOT EXISTS PLAYERS (
	PLAYER_ID INTEGER NOT NULL UNIQUE,
    GROUP_ID INTEGER NOT NULL,
    PRIMARY KEY (PLAYER_ID)
);

CREATE TABLE IF NOT EXISTS MATCHES (
	MATCH_ID INTEGER NOT NULL UNIQUE,
    FIRST_PLAYER INTEGER NOT NULL,
    SECOND_PLAYER INTEGER NOT NULL,
    FIRST_SCORE INTEGER NOT NULL,
    SECOND_SCORE INTEGER NOT NULL,
    FOREIGN KEY (FIRST_PLAYER) REFERENCES PLAYERS(PLAYER_ID),
    FOREIGN KEY (SECOND_PLAYER) REFERENCES PLAYERS(PLAYER_ID)
);

INSERT INTO PLAYERS VALUES (20, 2);
INSERT INTO PLAYERS VALUES (30, 1);
INSERT INTO PLAYERS VALUES (40, 3);
INSERT INTO PLAYERS VALUES (45, 1);
INSERT INTO PLAYERS VALUES (50, 2);
INSERT INTO PLAYERS VALUES (65, 1);
SELECT * FROM PLAYERS;

INSERT INTO MATCHES VALUES (1, 30, 45, 10, 12);
INSERT INTO MATCHES VALUES (2, 20, 50, 5, 5);
INSERT INTO MATCHES VALUES (13, 65, 45, 10, 10);
INSERT INTO MATCHES VALUES (5, 30, 65, 3, 15);
INSERT INTO MATCHES VALUES (42, 45, 65, 8, 4);
SELECT * FROM MATCHES;

--
WITH
MATCH_FIRST_PLAYER_SCORE AS (
	SELECT
		MATCH_ID,
        FIRST_PLAYER AS PLAYER_ID,
        FIRST_SCORE AS SCORE
	FROM MATCHES
),
MATCH_SECOND_PLAYER_SCORE AS (
	SELECT
		MATCH_ID,
        SECOND_PLAYER AS PLAYER_ID,
        SECOND_SCORE AS SCORE
	FROM MATCHES
),
UNION_MATCH_PLAYER_SCORE AS (
	SELECT * FROM MATCH_FIRST_PLAYER_SCORE
	UNION ALL
	SELECT * FROM MATCH_SECOND_PLAYER_SCORE
),
JOIN_GROUP_PLAYER_MATCH_SCORE AS (
	SELECT
		P.GROUP_ID,
        P.PLAYER_ID,
        IFNULL(U.SCORE, 0) AS SCORE
    FROM PLAYERS P LEFT JOIN UNION_MATCH_PLAYER_SCORE U ON P.PLAYER_ID = U.PLAYER_ID
	ORDER BY GROUP_ID, PLAYER_ID, SCORE DESC
),
GROUP_PLAYER_TOTAL_SCORE AS (
	SELECT
		GROUP_ID,
        PLAYER_ID,
        SUM(SCORE) AS TOTAL_SCORE
    FROM JOIN_GROUP_PLAYER_MATCH_SCORE
    GROUP BY GROUP_ID, PLAYER_ID
    ORDER BY GROUP_ID, PLAYER_ID
),
GROUP_MAX_SCORE AS (
	SELECT
		GROUP_ID,
		MAX(TOTAL_SCORE) AS MAX_SCORE
    FROM GROUP_PLAYER_TOTAL_SCORE
    GROUP BY GROUP_ID
),
GROUP_PLAYER_WITH_MAX_SCORE AS (
	SELECT
		G1.GROUP_ID,
        G2.PLAYER_ID
    FROM GROUP_MAX_SCORE G1
    LEFT JOIN GROUP_PLAYER_TOTAL_SCORE G2 ON G1.GROUP_ID = G2.GROUP_ID AND G1.MAX_SCORE = G2.TOTAL_SCORE
),
GROUP_WINNER AS (
	SELECT 
		GROUP_ID, 
		MIN(PLAYER_ID) AS WINNER_ID 
    FROM GROUP_PLAYER_WITH_MAX_SCORE 
    GROUP BY GROUP_ID
)
SELECT * FROM GROUP_WINNER;
-- SELECT * FROM GROUP_PLAYER_WITH_MAX_SCORE;
-- SELECT * FROM GROUP_MAX_SCORE;
-- SELECT * FROM GROUP_PLAYER_TOTAL_SCORE;
-- SELECT * FROM JOIN_GROUP_PLAYER_MATCH_SCORE;
-- SELECT * FROM UNION_MATCH_PLAYER_SCORE;  
-- SELECT * FROM MATCH_SECOND_PLAYER_SCORE;
-- SELECT * FROM MATCH_FIRST_PLAYER_SCORE;

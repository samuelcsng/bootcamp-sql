CREATE DATABASE IF NOT EXISTS SQL_EXERCISE_3;
USE SQL_EXERCISE_3;

-- Question 1a 
CREATE TABLE IF NOT EXISTS CUSTOMER (
	ID INTEGER NOT NULL PRIMARY KEY,
    CUSTOMER_NAME VARCHAR(255) NOT NULL,
    CITY_ID INTEGER, -- FOREIGN KEY
    CUSTOMER_ADDRESS VARCHAR(255) NOT NULL,
    CONTACT_PERSON VARCHAR(255),
    EMAIL VARCHAR(128) NOT NULL,
    PHONE VARCHAR(128) NOT NULL
    -- FOREIGN KEY (CITY_ID) REFERENCES 
);
CREATE TABLE IF NOT EXISTS PRODUCT (
	ID INTEGER NOT NULL PRIMARY KEY,
    SKU VARCHAR(32) NOT NULL,
    PRODUCT_NAME VARCHAR(128) NOT NULL,
    PRODUCT_DESCRIPTION TEXT NOT NULL,
    CURRENT_PRICE DECIMAL(8,2) NOT NULL,
    QUANTITY_IN_STOCK INT NOT NULL
);
CREATE TABLE IF NOT EXISTS INVOICE (
	ID INTEGER NOT NULL PRIMARY KEY,
    INVOICE_NUMBER VARCHAR(255) NOT NULL,
    CUSTOMER_ID INT, -- FK
    USER_ACCOUNT_ID INT NOT NULL,
    TOTAL_PRICE DECIMAL(8,2) NOT NULL,
    TIME_ISSUED VARCHAR(255),
    TIME_DUE VARCHAR(255),
    TIME_PAID VARCHAR(255),
    TIME_CANCELED VARCHAR(255),
    TIME_REFUNDED VARCHAR(255),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(ID)
);
CREATE TABLE IF NOT EXISTS INVOICE_ITEM (
	ID INTEGER NOT NULL PRIMARY KEY,
    INVOICE_ID INT, -- FK
    PRODUCT_ID INT, -- FK
    QUANTITY INT NOT NULL,
    PRICE DECIMAL(8,2) NOT NULL,
    LINE_TOTAL_PRICE DECIMAL(8,2) NOT NULL,
    FOREIGN KEY (INVOICE_ID) REFERENCES INVOICE(ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID)
);



-- Question 1b
-- Sample Data
DELETE FROM CUSTOMER;
INSERT INTO CUSTOMER VALUES
(1, 'Drogerie Wien', 1, 'Deckergasse 15A', 'Emil Steinbach', 'abc@gmail.com', 123455678);
INSERT INTO CUSTOMER VALUES
(2, 'John', 4, 'Deckergasse 1A', '9upper', 'abck@gmail.com', 12345567);
INSERT INTO CUSTOMER VALUES
(3, 'Mary', 8, 'Deckergasse 18A', '9upper', 'abcd@gmail.com', 1234556789);

DELETE FROM PRODUCT;
INSERT INTO PRODUCT VALUES
(1, '330120', '9UP PRODUCT', 'COMPLETELY 9UP', 60, 122);
INSERT INTO PRODUCT VALUES
(2, '330121', '9UPPER PRODUCT', 'COMPLETELY 9UPPER', 50, 50);
INSERT INTO PRODUCT VALUES
(3, '330122', '9UPPER PRODUCTS', 'SUPER 9UPPER', 40, 600);
INSERT INTO PRODUCT VALUES
(4, '330123', '9UPPER PRODUCTSS', 'SUPER COMPLETELY 9UPPER', 30, 500);

DELETE FROM INVOICE;
INSERT INTO INVOICE VALUES
(1, 123456780, 2, 41, 1423, NULL, NULL, NULL, NULL, NULL);
INSERT INTO INVOICE VALUES
(2, 123456780, 3, 42, 1400, NULL, NULL, NULL, NULL, NULL);
INSERT INTO INVOICE VALUES
(3, 123456780, 2, 43, 17000, NULL, NULL, NULL, NULL, NULL);

DELETE FROM INVOICE_ITEM;
INSERT INTO INVOICE_ITEM VALUES
(1, 1, 1, 40, 23, 920);
INSERT INTO INVOICE_ITEM VALUES
(2, 1, 2, 4, 20, 80);
INSERT INTO INVOICE_ITEM VALUES
(3, 1, 3, 4, 10, 40);
INSERT INTO INVOICE_ITEM VALUES
(4, 1, 2, 4, 30, 120);

SELECT * FROM CUSTOMER;
SELECT * FROM PRODUCT;
SELECT * FROM INVOICE;
SELECT * FROM INVOICE_ITEM;



-- Question 1c
WITH
CUSTOMER_LIST AS (
SELECT
	'CUSTOMER' AS STRING,
	C.ID AS ID,
    C.CUSTOMER_NAME AS NAME
FROM CUSTOMER C
LEFT JOIN INVOICE I ON C.ID = I.CUSTOMER_ID
WHERE I.ID IS NULL
),
PRODUCT_LIST AS (
SELECT
	P.ID AS ID
FROM PRODUCT P
LEFT JOIN INVOICE_ITEM II ON P.ID = II.PRODUCT_ID
WHERE II.ID IS NULL
),
PRODUCT_LIST_WITH_NAME AS (
SELECT
	'PRODUCT' AS STRING,
    PL.ID AS ID,
    P.PRODUCT_NAME AS NAME
FROM PRODUCT_LIST PL
JOIN PRODUCT P ON PL.ID = P.ID
),
UNION_LIST AS (
SELECT * FROM CUSTOMER_LIST
UNION
SELECT * FROM PRODUCT_LIST_WITH_NAME
)
SELECT * FROM UNION_LIST;








-- Question 2 

-- Table Structure
-- DROP TABLE EMPLOYEE;
CREATE TABLE EMPLOYEE (
	ID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
	EMPLOYEE_NAME VARCHAR(30) NOT NULL,
	SALARY NUMERIC(8,2),
	PHONE NUMERIC(15),
	EMAIL VARCHAR(50),
	DEPT_ID INTEGER NOT NULL
);

-- DROP TABLE DEPARTMENT;
CREATE TABLE DEPARTMENT (
	ID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
	DEPT_CODE VARCHAR(3) NOT NULL,
	DEPT_NAME VARCHAR(200) NOT NULL
);

-- Excepted sample result
-- HR 2
-- IT 1
-- SA 1
-- 9UP 0

-- Sample Data
DELETE FROM EMPLOYEE;
INSERT INTO EMPLOYEE VALUES (1, 'JOHN', 20000, 90234567, 'JOHN@GMAIL.COM', 1);
INSERT INTO EMPLOYEE VALUES (2, 'MARY', 10000, 90234561, 'MARY@GMAIL.COM', 1);
INSERT INTO EMPLOYEE VALUES (3, 'STEVE', 30000, 90234562, 'STEVE@GMAIL.COM', 3);
INSERT INTO EMPLOYEE VALUES (4, 'SUNNY', 40000, 90234563, 'SUNNY@GMAIL.COM', 4);
SELECT * FROM EMPLOYEE;

DELETE FROM DEPARTMENT;
INSERT INTO DEPARTMENT VALUES (1, 'HR', 'HUMAN RESOURCES');
INSERT INTO DEPARTMENT VALUES (2, '9UP', '9UP DEPARTMENT');
INSERT INTO DEPARTMENT VALUES (3, 'SA', 'SALES DEPARTMENT');
INSERT INTO DEPARTMENT VALUES (4, 'IT', 'INFORMATION TECHNOLOGY DEPARTMENT');
SELECT * FROM DEPARTMENT;



-- 2a) Find the number of employees in each department 
-- The row order should be in number of employees from high to low.
-- If the number of employees is same, then order by department code in ascending order
-- Select 2 columns in total: 'Department Code' and 'Number of Employees' 
SELECT
    D.DEPT_CODE AS DEPARTMENT_CODE,
    COUNT(E.ID) AS NUMBER_OF_EMPLOYEES
FROM DEPARTMENT D
LEFT JOIN EMPLOYEE E ON D.ID = E.DEPT_ID
GROUP BY D.ID
ORDER BY NUMBER_OF_EMPLOYEES DESC, DEPARTMENT_CODE;

-- 2b) Is your SQL in 2a still working after inserting the following data? If not, why?
-- Please insert the following data into department. YES, the dept_code 'IT' is duplicated. 
DELETE FROM DEPARTMENT WHERE ID = 5;
INSERT INTO DEPARTMENT VALUES (5, 'IT', 'INFORMATION TECHNOLOGY DEPARTMENT');
-- THE SQL IN 2a STILL WORKING
-- HR 2
-- IT 1
-- SA 1
-- 9UP 0
-- IT 0

